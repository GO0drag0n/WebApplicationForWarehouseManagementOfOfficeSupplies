@model WebApplicationForWarehouseManagementOfOfficeSupplies.DTOs.ProductViewModel

@{
    ViewData["Title"] = "Add New Product";
}

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <div class="card shadow-sm border-0 rounded-3">
                <div class="card-header bg-primary text-white py-3">
                    <h4 class="card-title text-center mb-0">
                        <i class="bi bi-box-seam me-2"></i>Add New Product
                    </h4>
                </div>
                <div class="card-body p-4">
                    <form asp-controller="Product" asp-action="Create" method="post" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()

                        <div class="row">
                            <!-- Product Information Section -->
                            <div class="col-12 mb-4">
                                <h5 class="border-bottom pb-2 text-secondary">
                                    <i class="bi bi-info-circle me-2"></i>Product Information
                                </h5>
                                <div class="row g-3 mt-2">
                                    <div class="col-md-6">
                                        <label asp-for="ProductBrand" class="form-label fw-semibold">Product Brand</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="bi bi-tag"></i></span>
                                            <input asp-for="ProductBrand" class="form-control" placeholder="Enter brand name" />
                                        </div>
                                        <span asp-validation-for="ProductBrand" class="text-danger small"></span>
                                    </div>
                                    <div class="col-md-6">
                                        <label asp-for="ProductModel" class="form-label fw-semibold">Product Model</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="bi bi-upc"></i></span>
                                            <input asp-for="ProductModel" class="form-control" placeholder="Enter model number" />
                                        </div>
                                        <span asp-validation-for="ProductModel" class="text-danger small"></span>
                                    </div>
                                    <div class="col-12">
                                        <label asp-for="ProductCategoryID" class="form-label fw-semibold">Product Category</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="bi bi-folder"></i></span>
                                            <select asp-for="ProductCategoryID" class="form-select" asp-items="Model.Categories"></select>
                                            @if (User.IsInRole("Admin"))
                                            {
                                                <button type="button" id="openCreateCategoryModal" class="btn btn-outline-primary">
                                                    <i class="bi bi-plus-circle me-1"></i>New
                                                </button>
                                            }
                                        </div>
                                        <span asp-validation-for="ProductCategoryID" class="text-danger small"></span>
                                    </div>
                                </div>
                            </div>

                            <!-- Pricing & Inventory Section -->
                            <div class="col-12 mb-4">
                                <h5 class="border-bottom pb-2 text-secondary">
                                    <i class="bi bi-currency-dollar me-2"></i>Pricing & Inventory
                                </h5>
                                <div class="row g-3 mt-2">
                                    <div class="col-md-4">
                                        <label asp-for="ProductQuantity" class="form-label fw-semibold">Quantity (pcs.)</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="bi bi-123"></i></span>
                                            <input asp-for="ProductQuantity" class="form-control" type="number" min="0" placeholder="0" />
                                        </div>
                                        <span asp-validation-for="ProductQuantity" class="text-danger small"></span>
                                    </div>
                                    <div class="col-md-4">
                                        <label asp-for="ProductPrice" class="form-label fw-semibold">Selling Price</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="bi bi-cash"></i></span>
                                            <input asp-for="ProductPrice" class="form-control" type="number" step="0.01" min="0" placeholder="0.00" />
                                        </div>
                                        <span asp-validation-for="ProductPrice" class="text-danger small"></span>
                                    </div>
                                    <div class="col-md-4">
                                        <label asp-for="ProductDeliveryPrice" class="form-label fw-semibold">Delivery Price</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="bi bi-truck"></i></span>
                                            <input asp-for="ProductDeliveryPrice" class="form-control" type="number" step="0.01" min="0" placeholder="0.00" />
                                        </div>
                                        <span asp-validation-for="ProductDeliveryPrice" class="text-danger small"></span>
                                    </div>
                                    <div class="col-md-4">
                                        <label asp-for="MinQuantityThreshold" class="form-label fw-semibold">Low Stock Threshold</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="bi bi-exclamation-triangle"></i></span>
                                            <input asp-for="MinQuantityThreshold" class="form-control" type="number" min="0" placeholder="0" />
                                        </div>
                                        <span asp-validation-for="MinQuantityThreshold" class="text-danger small"></span>
                                    </div>
                                </div>
                            </div>

                            <!-- Storage Location Section -->
                            <div class="col-12 mb-4">
                                <h5 class="border-bottom pb-2 text-secondary">
                                    <i class="bi bi-geo-alt me-2"></i>Storage Location
                                </h5>
                                <div class="row g-3 mt-2">
                                    <div class="col-md-6">
                                        <label asp-for="ProductRow" class="form-label fw-semibold">Storage Row</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="bi bi-grid-3x3"></i></span>
                                            <input asp-for="ProductRow" class="form-control" placeholder="Enter row number/letter" />
                                        </div>
                                        <span asp-validation-for="ProductRow" class="text-danger small"></span>
                                    </div>
                                    <div class="col-md-6">
                                        <label asp-for="ProductSection" class="form-label fw-semibold">Storage Section</label>
                                        <div class="input-group">
                                            <span class="input-group-text"><i class="bi bi-grid-1x2"></i></span>
                                            <input asp-for="ProductSection" class="form-control" placeholder="Enter section number/letter" />
                                        </div>
                                        <span asp-validation-for="ProductSection" class="text-danger small"></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="d-grid gap-2 mt-4">
                            <button type="submit" class="btn btn-primary py-2">
                                <i class="bi bi-plus-circle me-2"></i>Add Product
                            </button>
                            <a asp-controller="Product" asp-action="Index" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-left me-2"></i>Back to List
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create Category Modal -->
<div class="modal fade" id="createCategoryModal" tabindex="-1" aria-labelledby="createCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="createCategoryModalLabel">
                    <i class="bi bi-folder-plus me-2"></i>Create New Category
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <div class="mb-3">
                    <label for="categoryName" class="form-label fw-semibold">Category Name</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-folder"></i></span>
                        <input type="text" class="form-control" id="categoryName" name="categoryName" placeholder="Enter category name" />
                    </div>
                    <div class="invalid-feedback" id="categoryNameFeedback"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle me-2"></i>Cancel
                </button>
                <button type="button" id="saveCategoryBtn" class="btn btn-primary">
                    <i class="bi bi-save me-2"></i>Save Category
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Initialize tooltips
        const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });

        // Open category modal
        document.getElementById('openCreateCategoryModal').addEventListener('click', function () {
            const modal = new bootstrap.Modal(document.getElementById('createCategoryModal'));
            modal.show();
        });

        // Save category
        document.getElementById('saveCategoryBtn').addEventListener('click', function () {
            const categoryNameInput = document.getElementById('categoryName');
            const categoryName = categoryNameInput.value;
            const feedbackElement = document.getElementById('categoryNameFeedback');

            // Validate input
            if (categoryName.trim() === '') {
                categoryNameInput.classList.add('is-invalid');
                feedbackElement.textContent = 'Please enter a category name.';
                feedbackElement.style.display = 'block';
                return;
            } else {
                categoryNameInput.classList.remove('is-invalid');
                feedbackElement.style.display = 'none';
            }

            // Show loading state
            const saveBtn = document.getElementById('saveCategoryBtn');
            const originalBtnText = saveBtn.innerHTML;
            saveBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Saving...';
            saveBtn.disabled = true;

            fetch('/Category/Create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ name: categoryName }),
            })
                .then((response) => {
                    if (!response.ok) {
                        return response.text().then((text) => {
                            throw new Error(text || 'Unknown error');
                        });
                    }
                    return response.json();
                })
                .then((data) => {
                    // Show success toast
                    const toastContainer = document.createElement('div');
                    toastContainer.className = 'position-fixed bottom-0 end-0 p-3';
                    toastContainer.style.zIndex = '11';

                    toastContainer.innerHTML = `
                            <div class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
                                <div class="d-flex">
                                    <div class="toast-body">
                                        <i class="bi bi-check-circle me-2"></i>${data.message}
                                    </div>
                                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                                </div>
                            </div>
                        `;

                    document.body.appendChild(toastContainer);
                    const toast = new bootstrap.Toast(toastContainer.querySelector('.toast'));
                    toast.show();

                    // Reset and close modal
                    setTimeout(() => {
                        location.reload();
                    }, 1000);
                })
                .catch((error) => {
                    console.error('Error:', error);

                    // Show error message
                    categoryNameInput.classList.add('is-invalid');
                    feedbackElement.textContent = `Failed to create category: ${error.message}`;
                    feedbackElement.style.display = 'block';
                })
                .finally(() => {
                    // Reset button state
                    saveBtn.innerHTML = originalBtnText;
                    saveBtn.disabled = false;
                });
        });
    });
</script>